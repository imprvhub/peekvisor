---
import Avatar from "@components/ui/avatars/Avatar.astro";
import { getLangFromUrl, useTranslations } from "../../../i18n/utils";

interface Props {
  userInfo: {
    fullName?: string | null;
    email?: string | null;
    profilePhoto?: string | null;
  };
  userWebsites?: any[];
}

const { userInfo, userWebsites = [] } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<div class="hs-dropdown relative inline-flex">
  <button
    type="button"
    class="hs-dropdown-toggle flex items-center gap-x-2 rounded-full p-1 transition-colors duration-200 hover:bg-neutral-200 dark:hover:bg-neutral-700"
    id="avatar-dropdown"
  >
    <Avatar
      src={userInfo.profilePhoto}
      alt={userInfo.fullName || userInfo.email || "User"}
      fullName={userInfo.fullName || undefined}
      size="sm"
    />
    <svg
      class="hs-dropdown-open:rotate-180 size-4 text-neutral-800 dark:text-neutral-200"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
    >
      <path d="m6 9 6 6 6-6"></path>
    </svg>
  </button>

  <div
    class="hs-dropdown-menu hs-dropdown-open:opacity-100 z-[1001] hidden min-w-60 rounded-lg bg-white p-2 opacity-0 shadow-md transition-opacity duration-300 dark:border dark:border-neutral-700 dark:bg-neutral-800"
    aria-labelledby="avatar-dropdown"
  >
    <div class="py-2 first:pt-0 last:pb-0">
      <div class="flex items-center space-x-3 px-3 py-2">
        <div class="min-w-0 flex-1">
          <p
            class="truncate text-sm font-medium text-neutral-900 dark:text-neutral-100"
          >
            {userInfo.fullName || "User"}
          </p>
          <p
            class="truncate text-sm text-neutral-500 dark:text-neutral-400"
          >
            {userInfo.email}
          </p>
        </div>
      </div>
    </div>

    {
      userWebsites.length > 0 && (
        <div class="py-2 first:pt-0 last:pb-0">
          <a
          href={`/${lang}/dashboard`}
          class="block rounded-lg px-3 py-2 text-xs font-medium uppercase text-neutral-400 transition-colors duration-200 hover:bg-neutral-100 hover:text-neutral-800 dark:text-neutral-500 dark:hover:bg-neutral-700 dark:hover:text-neutral-300"
        >
          Your Domains
        </a>
          {userWebsites.slice(0, 5).map((website: any) => (
            <a
              class="flex items-center gap-x-3.5 rounded-lg px-3 py-2 text-sm text-neutral-800 hover:bg-neutral-100 focus:ring-2 focus:ring-blue-500 dark:text-neutral-400 dark:hover:bg-neutral-700 dark:hover:text-neutral-300"
              href={`/${lang}/analytics/${website.id}`}
            >
              <div
              class="relative flex h-8 w-8 items-center justify-center rounded-md bg-neutral-100 dark:bg-neutral-700 overflow-hidden"
            >
              <img
                class="website-favicon h-5 w-5 rounded absolute hidden"
                data-domain={website.domain}
                alt={`${website.name} favicon`}
              />
              <div
                class="website-fallback-icon text-neutral-700 dark:text-neutral-300 flex items-center justify-center"
              >
                <svg
                  class="w-5 h-5"
                  width="24"
                  height="24"
                  viewBox="0 -960 960 960"
                  fill="currentColor"
                >
                  <path
                    d="M480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm-40-82v-78q-33 0-56.5-23.5T360-320v-40L168-552q-3 18-5.5 36t-2.5 36q0 121 79.5 212T440-162Zm276-102q20-22 36-47.5t26.5-53q10.5-27.5 16-56.5t5.5-59q0-98-54.5-179T600-776v16q0 33-23.5 56.5T520-680h-80v80q0 17-11.5 28.5T400-560h-80v80h240q17 0 28.5 11.5T600-440v120h40q26 0 47 15.5t29 40.5Z"
                  ></path>
                </svg>
              </div>
            </div>
              <div class="grow">
                <span class="block text-sm font-medium text-neutral-800 dark:text-neutral-200">
                  {website.name}
                </span>
                <span class="block text-xs text-neutral-500 dark:text-neutral-400">
                  {website.domain}
                </span>
              </div>
            </a>
          ))}
          {userWebsites.length > 5 && (
            <a
              class="flex items-center gap-x-3.5 rounded-lg px-3 py-2 text-sm text-neutral-800 hover:bg-neutral-100 focus:ring-2 focus:ring-blue-500 dark:text-neutral-400 dark:hover:bg-neutral-700 dark:hover:text-neutral-300"
              href={`/${lang}/websites`}
            >
              View all websites →
            </a>
          )}
        </div>
      )
    }

    <div class="my-2 border-t border-neutral-200 dark:border-neutral-700"></div>

    <a
      href={`/${lang}/dashboard`}
      class="flex items-center gap-x-3.5 rounded-lg px-3 py-2 text-sm text-neutral-800 hover:bg-neutral-100 focus:ring-2 focus:ring-blue-500 dark:text-neutral-400 dark:hover:bg-neutral-700 dark:hover:text-neutral-300"
    >
      <svg
        class="h-5 w-5 flex-none fill-current"
        viewBox="0 -960 960 960"
      >
        <path d="M510-570v-270h330v270H510ZM120-450v-390h330v390H120Zm390 330v-390h330v390H510Zm-390 0v-270h330v270H120Zm60-390h210v-270H180v270Zm390 330h210v-270H570v270Zm0-450h210v-150H570v150ZM180-180h210v-150H180v150Zm210-330Zm180-120Zm0 180ZM390-330Z" />
      </svg>
      {t("nav.dashboard")}
    </a>

    <a
      href={`/${lang}/settings`}
      class="flex items-center gap-x-3.5 rounded-lg px-3 py-2 text-sm text-neutral-800 hover:bg-neutral-100 focus:ring-2 focus:ring-blue-500 dark:text-neutral-400 dark:hover:bg-neutral-700 dark:hover:text-neutral-300"
    >
      <svg
        class="h-5 w-5 flex-none fill-current"
        viewBox="0 -960 960 960"
      >
        <path d="m370-80-16-128q-13-5-24.5-12T307-235l-119 50L78-375l103-78q-1-7-1-13.5v-27q0-6.5 1-13.5L78-585l110-190 119 50q11-8 23-15t24-12l16-128h220l16 128q13 5 24.5 12t22.5 15l119-50 110 190-103 78q1 7 1 13.5v27q0 6.5-1 13.5l103 78-110 190-119-50q-11 8-23 15t-24 12L590-80H370Zm70-80h79l14-106q31-8 57.5-23.5T639-327l99 41 39-68-86-65q5-14 7-29.5t2-31.5q0-16-2-31.5t-7-29.5l86-65-39-68-99 42q-22-23-48.5-38.5T533-694l-13-106h-79l-14 106q-31 8-57.5-23.5T321-633l-99-41-39 68 86 64q-5 15-7 30t-2 32q0 16 2 31t7 30l-86 65 39 68 99-42q22 23 48.5-38.5T427-266l13 106Zm42-180q58 0 99-41t41-99q0-58-41-99t-99-41q-59 0-99.5 41T342-480q0 58 40.5 99t99.5 41Zm-2-140Z" />
      </svg>
      {t("nav.settings")}
    </a>

    <div class="my-2 border-t border-neutral-200 dark:border-neutral-700"></div>

    <a
      href="/api/auth/logout"
      class="flex items-center gap-x-3.5 rounded-lg px-3 py-2 text-sm text-red-600 hover:bg-red-50 focus:ring-2 focus:ring-red-500 dark:text-red-500 dark:hover:bg-red-800/10"
    >
      <svg
        class="h-5 w-5 flex-none fill-current"
        viewBox="0 -960 960 960"
      >
        <path d="M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h280v80H200v560h280v80H200Zm440-160-55-58 102-102H360v-80h327L585-622l55-58 200 200-200 200Z" />
      </svg>
      {t("nav.logout")}
    <script>
  document.addEventListener("DOMContentLoaded", () => {
    loadFavicons();
  });

  function loadFavicons() {
    const faviconImages = document.querySelectorAll(".website-favicon");

    faviconImages.forEach((img: Element, index: number) => {
      const domain = img.getAttribute("data-domain");
      const fallback = img.parentElement?.querySelector(
        ".website-fallback-icon",
      );

      if (!domain || !fallback) return;
      fallback.classList.remove("hidden");
      img.classList.add("hidden");

      const cleanDomain = domain
        .replace(/^https?:\/\//, "")
        .replace(/^www\./, "");

      const faviconUrls = [
        `https://${cleanDomain}/favicon.ico`,
        `https://${cleanDomain}/favicon.png`,
        `https://${cleanDomain}/apple-touch-icon.png`,
        `https://${cleanDomain}/apple-touch-icon-precomposed.png`,
        `https://${cleanDomain}/icon.png`
      ];
      
      let currentIndex = 0;
      
      function tryNextFavicon() {
        if (currentIndex >= faviconUrls.length) {
          console.log(`⚠️ No favicon found for ${domain}, keeping fallback`);
          return;
        }
        
        const tempImg = new Image();
        
        tempImg.onload = () => {
          if (tempImg.width >= 24 && tempImg.height >= 24) {
            img.setAttribute('src', faviconUrls[currentIndex]);
            img.classList.remove('hidden');
            if (fallback) {
              fallback.classList.add('hidden');
            }
            console.log(`✅ Favicon loaded for ${domain} from ${faviconUrls[currentIndex]}`);
          } else {
            console.log(`⚠️ Favicon too small for ${domain} from ${faviconUrls[currentIndex]}, trying next...`);
            currentIndex++;
            tryNextFavicon();
          }
        };
        
        tempImg.onerror = () => {
          currentIndex++;
          tryNextFavicon();
        };
        
        tempImg.src = faviconUrls[currentIndex];
      }
      
      tryNextFavicon();
    });
  }
</script>
    </a>
  </div>
</div>